{"version":3,"file":"static/js/MoviesPage.42391f0b.chunk.js","mappings":"gOACA,EAA4B,8BAA5B,EAAuE,+BAAvE,EAAyH,qCAAzH,EAAsS,oC,oEC6FtS,EAvFmB,WACjB,IAAAA,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,IAAIC,gBAAgBN,EAASO,QAAQC,IAAI,SAE9D,GAAIH,EAAc,CAChB,IAAMI,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACUC,EAAAA,EAAAA,IAAahB,GAAc,KAAD,EAAAU,EAAAG,EAAAI,KAA5CN,EAAOD,EAAPC,QAERjB,EAAUiB,GACVrB,EAAeU,GAEfkB,QAAQC,IAAInB,GAAc,wBAAAa,EAAAO,OAAA,GAAAX,EAAA,KAC3B,kBAPc,OAAAJ,EAAAgB,MAAA,KAAAC,UAAA,KASflB,GACF,CACF,GAAG,CAACT,EAASO,SAEb,IAAMqB,EAAY,eAAAC,GAAAlB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiB,EAAMC,GAAC,IAAAC,EAAAhB,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACP,GAAnBW,EAAEG,kBAEExC,EAAYyC,OAAO,CAADF,EAAAb,KAAA,gBAAAa,EAAAb,KAAA,GACMC,EAAAA,EAAAA,IAAa3B,GAAa,KAAD,EAAAsC,EAAAC,EAAAX,KAA3CN,EAAOgB,EAAPhB,QAERjB,EAAUiB,GACVrB,EAAe,IAEQ,IAAnBqB,EAAQoB,QACVC,IAAAA,OAAAA,QACE,6DAIJnC,EAAQoC,MAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACTvC,GAAQ,IACXO,OAAO,SAADiC,OAAW9C,MAChB,yBAAAuC,EAAAR,OAAA,GAAAK,EAAA,KAEN,gBApBiBW,GAAA,OAAAZ,EAAAH,MAAA,KAAAC,UAAA,KAsBlB,OACEe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAYH,UAC7BF,EAAAA,EAAAA,MAAA,QAAMI,UAAWC,EAAcC,SAAUpB,EAAagB,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SACEI,SAAU,SAAAlB,GAAC,OAAIpC,EAAeoC,EAAEmB,OAAOC,MAAM,EAC7CL,UAAWC,EACXK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZJ,MAAOzD,KAETmD,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAASN,UAAWC,EAAmBH,SAAC,gBAKxD9C,EAAOsC,OAAS,GACftC,EAAO0D,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OACrBd,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CACHC,GAAI,CACFC,SAAS,WAADtB,OAAA,GAAAA,OAAgBkB,IACxBK,MAAO,CACLC,KAAM,CACJhE,SAAAA,KAGJ4C,UAEFC,EAAAA,EAAAA,KAAA,KAAAD,SAAIe,OAXCD,IAaJ,MAAAlB,OAdQkB,GAeV,MAIf,C,2NC1FAO,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAM,mCACCC,EAAY,kCAEZ9C,EAAY,eAAAX,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMsD,GAAc,IAAAC,EAAAC,EAAAxE,EAAA,OAAAc,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACmE,OAA3GiD,EAAW,wBAAA7B,OAA2B0B,EAAG,qDAAA1B,OAAoD4B,GAAclD,EAAAE,KAAA,EAClF6C,IAAAA,IAAUI,GAAa,KAAD,EAAzC,OAAyCC,EAAApD,EAAAI,KAAvCxB,EAAMwE,EAAZC,KAAIrD,EAAAsD,OAAA,SACL1E,GAAM,wBAAAoB,EAAAO,OAAA,GAAAX,EAAA,KACd,gBAJwB2B,GAAA,OAAA/B,EAAAgB,MAAA,KAAAC,UAAA,KAMZ8C,EAAe,eAAA5C,GAAAlB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiB,EAAM4C,GAAO,IAAAL,EAAAM,EAAAC,EAAA,OAAAhE,EAAAA,EAAAA,KAAAK,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACU,OAA9CiD,EAAW,SAAA7B,OAAYkC,EAAO,cAAAlC,OAAa0B,EAAG,mBAAAjC,EAAAb,KAAA,EACtB6C,IAAAA,IAAUI,GAAa,KAAD,EAAxC,OAAwCM,EAAA1C,EAAAX,KAAtCsD,EAAKD,EAAXJ,KAAItC,EAAAuC,OAAA,SACLI,GAAK,wBAAA3C,EAAAR,OAAA,GAAAK,EAAA,KACb,gBAJ2B+C,GAAA,OAAAhD,EAAAH,MAAA,KAAAC,UAAA,KAMfmD,EAAmB,eAAArB,GAAA9C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkE,IAAA,IAAAV,EAAAW,EAAAlF,EAAA,OAAAc,EAAAA,EAAAA,KAAAK,MAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,OACoB,OAA/CiD,EAAW,8BAAA7B,OAAiC0B,GAAGe,EAAA7D,KAAA,EACtB6C,IAAAA,IAAUI,GAAa,KAAD,EAAzC,OAAyCW,EAAAC,EAAA3D,KAAvCxB,EAAMkF,EAAZT,KAAIU,EAAAT,OAAA,SACL1E,GAAM,wBAAAmF,EAAAxD,OAAA,GAAAsD,EAAA,KACd,kBAJ+B,OAAAtB,EAAA/B,MAAA,KAAAC,UAAA,KAMnBuD,EAAY,eAAAC,GAAAxE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuE,EAAMV,GAAO,IAAAW,EAAAC,EAAAjB,EAAAE,EAAAgB,EAAA,OAAA3E,EAAAA,EAAAA,KAAAK,MAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,OACoB,OAArDiD,EAAW,SAAA7B,OAAYkC,EAAO,qBAAAlC,OAAoB0B,EAAG,mBAAAsB,EAAApE,KAAA,EACxC6C,IAAAA,IAAUI,GAAa,KAAD,EACoD,OADvFE,EAAIiB,EAAAlE,KACJiE,EAAa,OAAJhB,QAAI,IAAJA,GAAU,QAANc,EAAJd,EAAMA,YAAI,IAAAc,GAAM,QAANC,EAAVD,EAAYI,YAAI,IAAAH,OAAZ,EAAJA,EAAkBI,QAAO,SAACC,EAAGC,EAAGC,GAAC,OAAKA,EAAEC,WAAU,SAAAC,GAAE,OAAIA,EAAGrC,KAAOiC,EAAEjC,EAAE,MAAMkC,CAAC,IAACJ,EAAAhB,OAAA,SACtFe,GAAM,wBAAAC,EAAA/D,OAAA,GAAA2D,EAAA,KACd,gBALwBY,GAAA,OAAAb,EAAAzD,MAAA,KAAAC,UAAA,KAOZsE,EAAU,eAAAC,GAAAvF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsF,EAAMzB,GAAO,IAAAL,EAAA+B,EAAA7B,EAAA,OAAA3D,EAAAA,EAAAA,KAAAK,MAAA,SAAAoF,GAAA,cAAAA,EAAAlF,KAAAkF,EAAAjF,MAAA,OACsB,OAArDiD,EAAW,SAAA7B,OAAYkC,EAAO,qBAAAlC,OAAoB0B,EAAG,mBAAAmC,EAAAjF,KAAA,EACpC6C,IAAAA,IAAUI,GAAa,KAAD,EAAjC,OAAiC+B,EAAAC,EAAA/E,KAArCiD,EAAI6B,EAAJ7B,KAAI8B,EAAA7B,OAAA,SACLD,GAAI,wBAAA8B,EAAA5E,OAAA,GAAA0E,EAAA,KACZ,gBAJsBG,GAAA,OAAAJ,EAAAxE,MAAA,KAAAC,UAAA,I","sources":["webpack://react-homework-template/./src/pages/MoviesPage.module.css?f2bc","pages/MoviesPage.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"MoviesPage_searchbar__h5+Hv\",\"searchForm\":\"MoviesPage_searchForm__MtlmP\",\"searchFormButton\":\"MoviesPage_searchFormButton__wppho\",\"SearchForm-button\":\"MoviesPage_SearchForm-button__r8iCn\",\"SearchFormBtnLabel\":\"MoviesPage_SearchFormBtnLabel__Iy7OQ\",\"SearchFormInput\":\"MoviesPage_SearchFormInput__weghc\"};","import s from './MoviesPage.module.css';\n\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from '../services/movies-api';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nconst MoviesPage = () => {\n  const [movieToFind, setMovieToFind] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    const searchString = new URLSearchParams(location.search).get('query');\n\n    if (searchString) {\n      const getMovies = async () => {\n        const { results } = await searchMovies(searchString);\n\n        setMovies(results);\n        setMovieToFind(searchString);\n\n        console.log(searchString);\n      };\n\n      getMovies();\n    }\n  }, [location.search]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (movieToFind.trim()) {\n      const { results } = await searchMovies(movieToFind);\n\n      setMovies(results);\n      setMovieToFind('');\n\n      if (results.length === 0) {\n        Notiflix.Notify.warning(\n          'No movies found! Please change your request and try again'\n        );\n      }\n\n      history.push({\n        ...location,\n        search: `query=${movieToFind}`,\n      });\n    }\n  };\n\n  return (\n    <>\n      <header className={s.searchbar}>\n        <form className={s.searchForm} onSubmit={handleSubmit}>\n          <input\n            onChange={e => setMovieToFind(e.target.value)}\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n            value={movieToFind}\n          />\n          <button type=\"submit\" className={s.searchFormButton}>\n            search\n          </button>\n        </form>\n      </header>\n      {movies.length > 0 &&\n        movies.map(({ id, title, }) => (\n          <ul key={`ul-${id}`}>\n            <li key={id}>\n              <Link\n                to={{\n                  pathname: `/movies/${`${id}`}`,\n                  state: {\n                    from: {\n                      location,\n                    },\n                  },\n                }}\n              >\n                <p>{title}</p>\n              </Link>\n            </li>\n          </ul>\n        ))}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst KEY = '9bca1f873478832455af25e449c4a86d';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async stringToSearch => {\n  const queryString = `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n  const data = await axios.get(queryString);\n  const result = data?.data?.cast?.filter((x, i, a) => a.findIndex(it => it.id === x.id) === i)\n  return result;\n};\n\nexport const getReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","movieToFind","setMovieToFind","_useState3","_useState4","movies","setMovies","location","useLocation","history","useHistory","useEffect","searchString","URLSearchParams","search","get","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$searchMovies","results","wrap","_context","prev","next","searchMovies","sent","console","log","stop","apply","arguments","handleSubmit","_ref2","_callee2","e","_yield$searchMovies2","_context2","preventDefault","trim","length","Notiflix","push","_objectSpread","concat","_x","_jsxs","_Fragment","children","_jsx","className","s","onSubmit","onChange","target","value","type","autoComplete","autoFocus","placeholder","map","_ref3","id","title","Link","to","pathname","state","from","axios","KEY","IMAGE_URL","stringToSearch","queryString","_yield$axios$get","data","abrupt","getMovieDetails","movieId","_yield$axios$get2","movie","_x2","fetchTrendingMovies","_callee3","_yield$axios$get3","_context3","getMovieCast","_ref4","_callee4","_data$data","_data$data$cast","result","_context4","cast","filter","x","i","a","findIndex","it","_x3","getReviews","_ref5","_callee5","_yield$axios$get4","_context5","_x4"],"sourceRoot":""}