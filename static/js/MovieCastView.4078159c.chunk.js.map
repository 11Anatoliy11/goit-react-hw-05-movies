{"version":3,"file":"static/js/MovieCastView.4078159c.chunk.js","mappings":"mPAIe,SAASA,EAAaC,GAAe,IAAZC,EAAOD,EAAPC,QACtCC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAWpB,OATAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAR,EAAA,OAAAM,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACKC,EAAAA,EAAAA,IAAalB,GAAS,KAAD,EAAlCK,EAAIU,EAAAI,KACVb,EAAQD,GAAM,wBAAAU,EAAAK,OAAA,GAAAP,EAAA,KACf,kBAHY,OAAAJ,EAAAY,MAAA,KAAAC,UAAA,KAKbd,GACF,GAAG,CAACR,KAGFuB,EAAAA,EAAAA,KAAA,MAAAC,SACGnB,GACCA,EAAKoB,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAAS,OAC3CC,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACED,EAAAA,EAAAA,KAAA,OACES,IACEJ,EACIK,EAAAA,GAAYL,EAAY,4FAG9BM,IAAKL,EACLM,MAAM,MACNC,OAAO,MAETb,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,KACJE,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAG,cAAYM,OAZRH,EAaJ,KAIf,C","sources":["pages/MovieCastView.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getMovieCast, IMAGE_URL } from '../services/movies-api';\nimport PropTypes from 'prop-types';\n\nexport default function MovieCastView({ movieId }) {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      const cast = await getMovieCast(movieId);\n      setCast(cast);\n    };\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast &&\n        cast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? IMAGE_URL + profile_path\n                  : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg?20200913095930`\n              }\n              alt={name}\n              width=\"100\"\n              height=\"\"\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nMovieCastView.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["MovieCastView","_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getCast","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getMovieCast","sent","stop","apply","arguments","_jsx","children","map","_ref3","id","profile_path","name","character","_jsxs","src","IMAGE_URL","alt","width","height"],"sourceRoot":""}